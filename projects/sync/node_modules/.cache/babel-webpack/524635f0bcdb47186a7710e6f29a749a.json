{"ast":null,"code":"import { checkAvailability } from './decorators/common';\nimport { get } from './util';\n\nvar IonicNativePlugin =\n/** @class */\nfunction () {\n  function IonicNativePlugin() {}\n  /**\n   * Returns a boolean that indicates whether the plugin is installed\n   * @return {boolean}\n   */\n\n\n  IonicNativePlugin.installed = function () {\n    var isAvailable = checkAvailability(this.pluginRef) === true;\n    return isAvailable;\n  };\n  /**\n   * Returns the original plugin object\n   */\n\n\n  IonicNativePlugin.getPlugin = function () {\n    if (typeof window !== 'undefined') {\n      return get(window, this.pluginRef);\n    }\n\n    return null;\n  };\n  /**\n   * Returns the plugin's name\n   */\n\n\n  IonicNativePlugin.getPluginName = function () {\n    var pluginName = this.pluginName;\n    return pluginName;\n  };\n  /**\n   * Returns the plugin's reference\n   */\n\n\n  IonicNativePlugin.getPluginRef = function () {\n    var pluginRef = this.pluginRef;\n    return pluginRef;\n  };\n  /**\n   * Returns the plugin's install name\n   */\n\n\n  IonicNativePlugin.getPluginInstallName = function () {\n    var plugin = this.plugin;\n    return plugin;\n  };\n  /**\n   * Returns the plugin's supported platforms\n   */\n\n\n  IonicNativePlugin.getSupportedPlatforms = function () {\n    var platform = this.platforms;\n    return platform;\n  };\n\n  IonicNativePlugin.pluginName = '';\n  IonicNativePlugin.pluginRef = '';\n  IonicNativePlugin.plugin = '';\n  IonicNativePlugin.repo = '';\n  IonicNativePlugin.platforms = [];\n  IonicNativePlugin.install = '';\n  return IonicNativePlugin;\n}();\n\nexport { IonicNativePlugin }; //# sourceMappingURL=ionic-native-plugin.js.map","map":{"version":3,"sources":["C:/Totvs/po-angular/node_modules/@ionic-native/core/__ivy_ngcc__/ionic-native-plugin.js"],"names":["checkAvailability","get","IonicNativePlugin","installed","isAvailable","pluginRef","getPlugin","window","getPluginName","pluginName","getPluginRef","getPluginInstallName","plugin","getSupportedPlatforms","platform","platforms","repo","install"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,GAAT,QAAoB,QAApB;;AACA,IAAIC,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,GAA6B,CAC5B;AACD;AACJ;AACA;AACA;;;AACIA,EAAAA,iBAAiB,CAACC,SAAlB,GAA8B,YAAY;AACtC,QAAIC,WAAW,GAAGJ,iBAAiB,CAAC,KAAKK,SAAN,CAAjB,KAAsC,IAAxD;AACA,WAAOD,WAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIF,EAAAA,iBAAiB,CAACI,SAAlB,GAA8B,YAAY;AACtC,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,aAAON,GAAG,CAACM,MAAD,EAAS,KAAKF,SAAd,CAAV;AACH;;AACD,WAAO,IAAP;AACH,GALD;AAMA;AACJ;AACA;;;AACIH,EAAAA,iBAAiB,CAACM,aAAlB,GAAkC,YAAY;AAC1C,QAAIC,UAAU,GAAG,KAAKA,UAAtB;AACA,WAAOA,UAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIP,EAAAA,iBAAiB,CAACQ,YAAlB,GAAiC,YAAY;AACzC,QAAIL,SAAS,GAAG,KAAKA,SAArB;AACA,WAAOA,SAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIH,EAAAA,iBAAiB,CAACS,oBAAlB,GAAyC,YAAY;AACjD,QAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,WAAOA,MAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIV,EAAAA,iBAAiB,CAACW,qBAAlB,GAA0C,YAAY;AAClD,QAAIC,QAAQ,GAAG,KAAKC,SAApB;AACA,WAAOD,QAAP;AACH,GAHD;;AAIAZ,EAAAA,iBAAiB,CAACO,UAAlB,GAA+B,EAA/B;AACAP,EAAAA,iBAAiB,CAACG,SAAlB,GAA8B,EAA9B;AACAH,EAAAA,iBAAiB,CAACU,MAAlB,GAA2B,EAA3B;AACAV,EAAAA,iBAAiB,CAACc,IAAlB,GAAyB,EAAzB;AACAd,EAAAA,iBAAiB,CAACa,SAAlB,GAA8B,EAA9B;AACAb,EAAAA,iBAAiB,CAACe,OAAlB,GAA4B,EAA5B;AACA,SAAOf,iBAAP;AACH,CAvDsC,EAAvC;;AAwDA,SAASA,iBAAT,G,CACA","sourcesContent":["import { checkAvailability } from './decorators/common';\nimport { get } from './util';\nvar IonicNativePlugin = /** @class */ (function () {\n    function IonicNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     * @return {boolean}\n     */\n    IonicNativePlugin.installed = function () {\n        var isAvailable = checkAvailability(this.pluginRef) === true;\n        return isAvailable;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    IonicNativePlugin.getPlugin = function () {\n        if (typeof window !== 'undefined') {\n            return get(window, this.pluginRef);\n        }\n        return null;\n    };\n    /**\n     * Returns the plugin's name\n     */\n    IonicNativePlugin.getPluginName = function () {\n        var pluginName = this.pluginName;\n        return pluginName;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    IonicNativePlugin.getPluginRef = function () {\n        var pluginRef = this.pluginRef;\n        return pluginRef;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    IonicNativePlugin.getPluginInstallName = function () {\n        var plugin = this.plugin;\n        return plugin;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    IonicNativePlugin.getSupportedPlatforms = function () {\n        var platform = this.platforms;\n        return platform;\n    };\n    IonicNativePlugin.pluginName = '';\n    IonicNativePlugin.pluginRef = '';\n    IonicNativePlugin.plugin = '';\n    IonicNativePlugin.repo = '';\n    IonicNativePlugin.platforms = [];\n    IonicNativePlugin.install = '';\n    return IonicNativePlugin;\n}());\nexport { IonicNativePlugin };\n//# sourceMappingURL=ionic-native-plugin.js.map"]},"metadata":{},"sourceType":"module"}